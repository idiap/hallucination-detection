# SPDX-FileCopyrightText: 2022 Idiap Research Institute
#
# SPDX-License-Identifier: MIT

""" Unit tests for selecting the correct beam in beam search. """

import unittest

from beam_search_beam_finder import BeamFinder

eos_token_id = 2


class TestIndexSelection(unittest.TestCase):

    def test_length_limit_bert(self):
        """ Length limit is reached and an EOS token is forced. """
        sequence = [1, 20901, 1037, 22394, 2692, 29624, 28332, 2001, 3909, 2]
        beam_search_tokens = ([20901, 1996, 1037, 4946, 3462], [1037, 20901, 1044, 4291, 2001], [22394, 1037, 4290, 2595, 3909], [2692, 22394, 22394, 7608, 2013], [29624, 2692, 2581, 3462, 7211], [28332, 29624, 2001, 2001, 2000], [2001, 28332, 4291, 2018, 3909], [3909, 2001, 8932, 4290, 2006], [7, 3, 8, 1, 4])
        beam_search_indices = ([0, 0, 0, 0, 0], [0, 1, 4, 2, 3], [0, 1, 3, 2, 4], [0, 1, 3, 2, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 4, 0, 3], [0, 1, 0, 2, 0], [0, 0, 0, 0, 0])
        BeamFinder.find_selected_indices(sequence[1:-1], beam_search_tokens[:-1], beam_search_indices[:-1])

    def test_length_limit_bart(self):
        """ Second test for length limit reached (for BART model). """
        sequence = [2, 0, 17906, 18924, 83, 21190, 12, 2619, 21, 2]
        beam_search_tokens = ([0, 0, 0, 0, 0], [17906, 41693, 0, 133, 250], [18924, 289, 11016, 17906, 41693], [83, 1000, 83, 18924, 289], [21190, 32620, 21190, 83, 1000], [12, 21, 12, 21190, 19070], [2619, 2619, 12, 7, 4731], [21, 2619, 21, 305, 19070], [7, 3, 8, 1, 4])
        beam_search_indices = ([0, 4, 3, 2, 1], [0, 0, 0, 0, 0], [0, 1, 3, 2, 2], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 1], [0, 2, 3, 4, 1], [0, 2, 1, 3, 0], [0, 0, 0, 0, 0])
        BeamFinder.find_selected_indices(sequence[2:-1], beam_search_tokens[1:-1], beam_search_indices[1:-1])

    def test_other_beam_stops(self):
        """ Another beam stops early (at position 56) and has a lower index than the eventually selected beam. """
        sequence = [1, 6529, 2012, 2829, 1010, 2829, 1998, 4729, 2118, 2031, 11156, 13091, 9938, 2013, 1996, 3257, 1997, 1996, 9088, 2128, 4588, 16506, 9088, 3, 1996, 5456, 2038, 2042, 2649, 2004, 1036, 1996, 2087, 2590, 4895, 19454, 7178, 3471, 1999, 2715, 5584, 1005, 3, 6529, 2903, 2027, 2024, 1037, 3696, 1997, 2601, 3043, 2008, 3084, 2039, 3770, 1003, 1997, 1996, 5304, 1005, 2015, 3742, 2]
        beam_search_tokens = ([6529, 26357, 6950, 1996, 2601], [2012, 3043, 2031, 2012, 2012], [2829, 2829, 11156, 2829, 2003], [1010, 1998, 1010, 13091, 2118], [4729, 2829, 4729, 9938, 4729], [2118, 1998, 1998, 2118, 1010], [4729, 1010, 4729, 4729, 2031], [2118, 5534, 11156, 2031, 2118], [2031, 2031, 11156, 13091, 11156], [11156, 11156, 13091, 13091, 9938], [13091, 13091, 9938, 3, 9938], [4097, 4097, 9938, 9938, 3], [3, 3, 3, 3, 2013], [2027, 2027, 1996, 1996, 2027], [3257, 2031, 2024, 2031, 2024], [1997, 11156, 11156, 2124, 2042], [1996, 2128, 1037, 9088, 2004], [9088, 21582, 4588, 9088, 2128], [2128, 3, 1010, 2126, 1005], [4588, 2027, 2128, 1996, 2029], [4588, 2003, 16506, 2031, 2024], [9088, 11156, 3, 2179, 2042], [2128, 3, 11156, 1996, 1996], [2011, 1996, 2102, 2027, 3406], [1996, 1037, 6529, 5456, 2031], [2012, 11156, 1997, 2118, 2038], [1997, 1996, 2042, 1996, 1036], [4729, 2829, 2649, 2601, 8075], [2004, 1010, 3043, 1998, 1998], [1036, 1005, 1996, 1998, 1996], [1996, 2087, 2087, 2038, 2003], [2087, 2590, 2590, 2042, 1996], [2590, 4895, 4895, 2649, 2087], [4895, 19454, 19454, 2004, 2590], [19454, 7178, 7178, 1036, 1996], [7178, 3471, 3471, 1996, 1005], [3471, 1005, 1999, 3291, 1005], [1999, 1005, 2715, 3, 1999], [2715, 3, 5584, 1999, 2381], [5584, 13702, 1005, 2381, 1005], [1005, 2015, 3, 1005, 3], [3, 1005, 3, 1996, 1010], [1996, 3, 6529, 2009, 2027], [1996, 2003, 2012, 2903, 2360], [1996, 2027, 2027, 1996, 2245], [2087, 2024, 1996, 2008, 2024], [1037, 3928, 1996, 1037, 2025], [3696, 2433, 3696, 8075, 5456], [1997, 1997, 2005, 1997, 2008], [2601, 17669, 2601, 1996, 1037], [3043, 5975, 3043, 8075, 2601], [2124, 1010, 2008, 1999, 2029], [1999, 2029, 3084, 1996, 3084], [1996, 2039, 2256, 2039, 2003], [5304, 3770, 5304, 2000, 3770], [3, 1010, 2566, 3770, 1003], [9358, 1996, 2029, 2566, 1997], [1997, 9358, 1996, 2003, 3084], [1996, 1997, 5304, 2039, 3742], [1996, 5304, 1005, 3, 3742], [1005, 5304, 2015, 3, 3742], [2015, 1005, 3742, 3, 3], [3742, 2015, 3, 1996, 1996])
        beam_search_indices = ([0, 0, 0, 0, 0], [0, 4, 0, 1, 2], [0, 3, 2, 4, 1], [0, 0, 1, 2, 0], [0, 0, 1, 3, 2], [0, 1, 0, 2, 1], [1, 0, 4, 2, 3], [0, 0, 4, 1, 3], [0, 1, 3, 2, 1], [1, 0, 2, 4, 3], [0, 1, 3, 4, 2], [1, 0, 0, 1, 2], [2, 3, 0, 1, 3], [0, 1, 4, 0, 2], [2, 0, 0, 1, 1], [0, 1, 3, 2, 1], [0, 0, 0, 0, 3], [0, 0, 1, 2, 3], [0, 0, 0, 1, 0], [0, 1, 2, 1, 2], [2, 4, 0, 1, 1], [2, 3, 2, 3, 3], [0, 0, 4, 1, 2], [2, 1, 0, 1, 0], [0, 0, 0, 1, 3], [2, 4, 3, 0, 3], [3, 2, 4, 1, 2], [0, 0, 2, 4, 1], [2, 1, 3, 0, 1], [0, 2, 0, 1, 3], [0, 0, 2, 1, 1], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 3], [0, 1, 2, 3, 1], [0, 0, 1, 0, 1], [0, 0, 2, 1, 3], [0, 1, 2, 1, 0], [0, 0, 2, 0, 4], [0, 1, 2, 3, 4], [0, 1, 3, 2, 0], [0, 1, 0, 0, 0], [1, 3, 2, 2, 2], [3, 3, 4, 1, 1], [3, 1, 4, 4, 2], [1, 0, 3, 4, 4], [0, 1, 3, 2, 2], [0, 1, 0, 2, 0], [0, 1, 2, 0, 0], [0, 1, 2, 3, 3], [1, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 0, 4, 1], [0, 1, 2, 1, 3], [0, 0, 1, 3, 1], [2, 0, 1, 3, 4], [0, 3, 4, 2, 2], [0, 1, 2, 4, 2], [1, 0, 2, 2, 0], [1, 0, 2, 1, 0], [0, 1, 2, 0, 1], [0, 1, 2, 3, 4])
        BeamFinder.find_selected_indices(sequence[1:-1], beam_search_tokens[:-1], beam_search_indices[:-1])

    def test_no_prefix_match(self):
        """ No prefix match for possible next tokens. """
        sequence = [1, 2745, 3158, 16216, 2099, 12449, 27042, 2098, 3507, 3803, 2386, 7638, 3158, 8659, 18697, 6392, 1021, 29624, 2475, 1999, 5772, 3, 1996, 2088, 2053, 1015, 2003, 2747, 20458, 1999, 1996, 4239, 2223, 2007, 1037, 7444, 1021, 29624, 2509, 3377, 3, 1996, 4154, 3727, 2032, 1999, 9614, 5473, 2279, 2733, 2004, 2002, 7719, 2353, 2013, 3953, 1999, 1996, 2795, 2]
        beam_search_tokens = ([2745, 2088, 1996, 3158, 3434], [3158, 2053, 2088, 16216, 3158], [16216, 1015, 2053, 2099, 8659], [2099, 3786, 1015, 12449, 2745], [12449, 7638, 3158, 3507, 3786], [3786, 27042, 3249, 2003, 10911], [3507, 2098, 7638, 3507, 2098], [3803, 3507, 3158, 3803, 7638], [2386, 3803, 8659, 2386, 3158], [7638, 2386, 18697, 7638, 8659], [3158, 7638, 6392, 3158, 18697], [8659, 3158, 1021, 8659, 6392], [18697, 8659, 29624, 18697, 1021], [6392, 18697, 2475, 6392, 29624], [1021, 6392, 1999, 1021, 2475], [29624, 1021, 29624, 1999, 3], [2475, 29624, 2475, 5772, 2088], [2475, 1999, 3, 3, 1999], [3, 1999, 5772, 2088, 1996], [3, 5772, 2053, 2088, 2088], [3, 1015, 2053, 2053, 2088], [1015, 1015, 2053, 2088, 1996], [1015, 2053, 2088, 2003, 2038], [1015, 2053, 2003, 20458, 2038], [1015, 1999, 2003, 2038, 2001], [2003, 1996, 2038, 2001, 3195], [20458, 2747, 4239, 2977, 20458], [1999, 2223, 20458, 2007, 1999], [1996, 2007, 1999, 1037, 1996], [1996, 1037, 7444, 2977, 4239], [1021, 7444, 2007, 2223, 4239], [29624, 1021, 2223, 1037, 2007], [29624, 7444, 1037, 2007, 3], [1021, 7444, 1037, 1996, 3377], [29624, 1021, 7444, 3, 1999], [29624, 1021, 3377, 1996, 2663], [29624, 3, 3, 1999, 1999], [1996, 2509, 1996, 2549, 2002], [3377, 3377, 2663, 2663, 4154], [3, 3, 3, 3, 3727], [1996, 3158, 1996, 1996, 1996], [8659, 4154, 4154, 4154, 4154], [3727, 3727, 3727, 3727, 2187], [3158, 3158, 3158, 3158, 2032], [8659, 8659, 8659, 8659, 1999], [9614, 5892, 9237, 8565, 16797], [5473, 5473, 5081, 5473, 5473], [2279, 2044, 2065, 1998, 1999], [2733, 2002, 2002, 1996, 2002], [2004, 3, 2044, 7719, 1010], [2002, 7918, 2353, 2002, 6316], [7719, 4572, 2013, 4202, 1999], [2353, 3953, 1999, 3464, 1996], [2013, 1999, 1999, 2795, 1999], [3953, 1996, 1996, 1996, 3], [1999, 2795, 3, 3953, 2795], [1996, 3, 7918, 2048, 6316], [2795, 4572, 2044, 7918, 4202], [3, 4572, 3464, 2002, 2108])
        beam_search_indices = ([0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 1], [0, 1, 4, 1, 2], [0, 0, 0, 0, 0], [0, 1, 0, 2, 4], [0, 1, 2, 3, 1], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 3, 4, 1], [0, 1, 2, 3, 4], [1, 0, 0, 2, 2], [0, 0, 1, 2, 2], [2, 1, 3, 0, 4], [1, 2, 3, 4, 0], [3, 2, 4, 0, 0], [2, 3, 4, 0, 0], [1, 2, 0, 3, 0], [1, 3, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 1, 1, 3], [0, 2, 1, 3, 4], [0, 1, 2, 3, 4], [2, 1, 3, 0, 0], [2, 1, 3, 4, 0], [0, 1, 4, 2, 3], [1, 3, 4, 2, 2], [1, 2, 3, 4, 3], [0, 1, 2, 4, 4], [1, 2, 2, 3, 2], [1, 2, 4, 4, 2], [1, 0, 2, 0, 1], [1, 3, 1, 3, 0], [0, 1, 2, 3, 4], [0, 4, 1, 2, 3], [1, 0, 2, 3, 4], [1, 2, 3, 4, 1], [0, 1, 2, 3, 0], [0, 1, 2, 3, 4], [4, 4, 4, 4, 4], [0, 1, 0, 2, 3], [0, 0, 0, 0, 0], [0, 2, 1, 4, 3], [0, 0, 0, 1, 0], [0, 1, 3, 2, 1], [0, 1, 2, 4, 2], [0, 2, 0, 1, 4], [0, 0, 3, 4, 1], [0, 1, 2, 4, 3], [0, 1, 0, 2, 3], [0, 1, 2, 3, 2], [0, 2, 3, 1, 4], [0, 3, 1, 2, 2])
        BeamFinder.find_selected_indices(sequence[1:-1], beam_search_tokens[:-1], beam_search_indices[:-1])

    def test_1(self):
        """ Test that failed during training with previous code. """
        sequence = [1, 6220, 3786, 16085, 1017, 29624, 2692, 1999, 2037, 4239, 2223, 13249, 2012, 1996, 5353, 3, 5207, 9481, 1005, 2015, 3125, 7119, 1037, 10232, 2663, 2012, 16085, 2000, 2275, 2039, 1037, 10232, 13249, 2007, 5087, 2142, 3, 5087, 2142, 2024, 2117, 1999, 1996, 2795, 2044, 2074, 2176, 2685, 2185, 2013, 5087, 2103, 2]
        beam_search_tokens = ([6220, 5207, 5087, 9433, 1037], [9481, 3786, 2142, 1005, 2103], [16085, 7644, 2015, 3195, 3786], [2000, 1017, 1999, 2103, 16085], [29624, 3362, 2000, 2000, 2275], [2692, 2487, 2039, 3966, 2475], [2000, 2012, 2223, 1999, 1999], [1996, 13249, 2037, 3362, 2037], [3, 5353, 4239, 4239, 3966], [2000, 2223, 2223, 2223, 5207], [9481, 13249, 13249, 13249, 3362], [2012, 2012, 2006, 3, 2006], [1996, 1996, 4465, 4465, 5207], [5353, 3, 5353, 3, 9481], [3, 3, 5207, 5207, 1005], [5207, 5207, 9481, 9481, 2015], [9481, 9481, 1005, 1005, 3195], [1005, 2015, 1005, 2015, 3195], [2015, 2015, 3125, 3125, 3453], [3125, 3125, 3453, 3453, 7119], [7119, 7119, 1999, 10203, 1999], [1037, 3575, 1037, 3575, 1037], [10232, 10232, 10232, 8995, 8995], [2663, 2663, 2663, 2663, 3377], [2012, 2012, 2012, 2012, 2012], [16085, 16085, 16085, 16085, 16085], [2000, 2000, 3, 3, 2000], [2275, 2275, 2275, 2191, 5087], [2039, 2039, 2039, 2009, 2142], [1037, 1037, 1037, 2698, 1996], [10232, 10232, 10232, 5222, 8995], [13249, 13249, 2041, 13249, 2674], [2007, 2007, 1997, 2007, 3], [5087, 2809, 5087, 5087, 2158], [2142, 2142, 3, 2142, 2005], [3, 3, 3, 2012, 2012], [1996, 1996, 1996, 1996, 5087], [2142, 2103, 2765, 2765, 12281], [2024, 2218, 1998, 2020, 2031], [5087, 1999, 2117, 1996, 6220], [2103, 1999, 2117, 2142, 1996], [2024, 1996, 2119, 1010, 2020], [2795, 1999, 2117, 1999, 2007], [1999, 2117, 1010, 2074, 2044], [2176, 1996, 1010, 2074, 2176], [2685, 2795, 2176, 2685, 2007], [5459, 2685, 2369, 2185, 2369], [2013, 2013, 1999, 2185, 6220], [5087, 5087, 2013, 2117, 2188], [2103, 2103, 5087, 3, 2188], [1999, 1999, 2103, 3, 3], [2117, 2117, 2959, 2959, 1999])
        beam_search_indices = ([0, 0, 0, 0, 0], [1, 0, 2, 0, 2], [1, 0, 3, 0, 2], [0, 0, 0, 0, 4], [1, 0, 4, 3, 0], [0, 0, 4, 1, 0], [0, 0, 3, 0, 1], [1, 2, 3, 0, 4], [1, 0, 2, 4, 3], [1, 2, 3, 4, 0], [4, 1, 2, 3, 0], [1, 2, 1, 1, 2], [0, 1, 2, 4, 3], [0, 2, 1, 3, 4], [0, 2, 1, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 2], [0, 2, 1, 3, 0], [0, 2, 1, 3, 1], [0, 1, 0, 1, 2], [0, 1, 2, 0, 3], [0, 2, 1, 4, 3], [0, 2, 4, 0, 2], [0, 1, 2, 3, 0], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 0, 1, 2], [0, 1, 4, 0, 2], [0, 1, 2, 3, 4], [0, 1, 2, 3, 0], [0, 1, 2, 3, 0], [0, 1, 3, 2, 0], [0, 1, 2, 3, 0], [0, 2, 1, 3, 0], [0, 2, 1, 3, 1], [0, 1, 3, 0, 1], [3, 4, 0, 1, 0], [4, 4, 2, 3, 2], [0, 0, 0, 0, 0], [2, 0, 0, 1, 2], [0, 2, 1, 0, 1], [0, 1, 0, 2, 0], [1, 0, 0, 2, 3], [2, 1, 0, 4, 0], [3, 0, 1, 4, 2], [0, 1, 3, 4, 2], [0, 2, 0, 0, 3], [3, 0, 0, 1, 2], [1, 0, 3, 2, 0], [0, 1, 2, 3, 2], [0, 1, 2, 0, 1], [0, 1, 1, 0, 2])
        BeamFinder.find_selected_indices(sequence[1:-1], beam_search_tokens[:-1], beam_search_indices[:-1])

    def test_2(self):
        """ Test that failed during training with previous code. """
        sequence = [1, 1996, 11258, 2608, 3309, 1010, 2379, 27112, 6374, 7051, 1010, 2003, 1999, 5458, 1998, 1999, 2613, 2342, 1997, 1037, 2191, 7840, 3, 2009, 1005, 2015, 1037, 11084, 3238, 6771, 1010, 2021, 2053, 2028, 2038, 11250, 2000, 26988, 2125, 1996, 27304, 2015, 5881, 2000, 1996, 6090, 2229, 3, 1996, 7759, 2282, 2039, 1037, 2460, 3462, 1997, 5108, 1010, 2007, 2049, 28616, 2232, 29624, 9335, 2232, 1997, 7251, 1998, 8397, 1010, 2070, 1997, 2029, 2024, 8403, 14361, 5841, 2]
        beam_search_tokens = ([11258, 1996, 1037, 2012, 2009], [2608, 11258, 1005, 1996, 1005], [3309, 2608, 2003, 2038, 2001], [3309, 1010, 1999, 2003, 2379], [2379, 1010, 2003, 27112, 1999], [27112, 2379, 6374, 27112, 1999], [6374, 27112, 7051, 6374, 5458], [7051, 6374, 7051, 2003, 1010], [1010, 7051, 1010, 2003, 1999], [1010, 2003, 2001, 2038, 1999], [2003, 2001, 2038, 1999, 2042], [1999, 2042, 1037, 5458, 1037], [5458, 1998, 1999, 1996, 9047], [1998, 1999, 6218, 5458, 1999], [1999, 2613, 1997, 2342, 2342], [1037, 2342, 2613, 1997, 2342], [1997, 7268, 2342, 1037, 1997], [2292, 1037, 1997, 2191, 1037], [8167, 2191, 1037, 7840, 2191], [6292, 7840, 2191, 3, 7840], [3, 3, 7840, 3, 1996], [3, 1996, 1996, 2009, 1996], [1996, 2009, 1005, 2021, 2003], [2015, 1005, 9047, 2282, 2003], [2015, 1037, 2003, 2003, 1037], [11084, 1037, 11084, 1996, 2025], [3238, 11084, 3238, 2034, 1037], [6771, 3238, 6771, 3944, 1010], [6771, 1010, 2007, 1998, 1011], [1010, 2021, 2007, 1996, 2007], [2021, 2007, 1996, 2009, 1996], [1996, 1005, 2053, 2009, 1996], [2028, 1005, 2282, 2003, 3829], [2038, 2003, 2038, 1037, 1050], [11250, 11084, 12176, 8572, 15047], [2000, 2000, 1996, 2015, 2125], [26988, 2000, 21418, 6366, 7540], [2125, 1996, 1996, 2125, 1996], [1996, 27304, 27304, 1037, 27304], [27304, 2015, 2015, 27304, 2015], [2015, 5881, 5881, 2015, 5881], [5881, 2000, 2000, 5881, 2000], [2000, 1996, 1996, 2000, 1996], [1996, 6090, 6090, 1996, 6090], [6090, 2229, 2229, 6090, 2229], [2229, 3, 2229, 3, 3], [3, 1998, 1010, 3, 5881], [1996, 2009, 1037, 2021, 2000], [2282, 3829, 7759, 8210, 2190], [2282, 2003, 2093, 14817, 2112], [2039, 2953, 7251, 2003, 2003], [1037, 1996, 2024, 2003, 2038], [2460, 7759, 4548, 1037, 4064], [3462, 2282, 1010, 29624, 2021], [2039, 1997, 2021, 1010, 1996], [1037, 5108, 1996, 2007, 2045], [2460, 1010, 1998, 2003, 2007], [3462, 2007, 29624, 2049, 1996], [1997, 2049, 28616, 1010, 1037], [5108, 28616, 2232, 2007, 11094], [2232, 1010, 3, 1998, 29624], [29624, 2007, 9335, 1996, 1996], [9335, 2049, 2232, 7759, 1037], [2232, 28616, 1997, 11094, 15849], [1997, 2232, 7251, 2006, 1010], [7251, 29624, 1998, 1996, 8397], [1998, 9335, 8397, 1010, 3681], [8397, 2232, 3242, 2330, 2003], [1997, 1010, 3, 2024, 2003], [7251, 2070, 1996, 4895, 4895], [1998, 1997, 29278, 29278, 1010], [8397, 2029, 5856, 5856, 3242], [2024, 1010, 3, 1998, 12423], [8403, 2070, 1996, 3, 2009], [14361, 1997, 7759, 1996, 2214], [5841, 2029, 2190, 3183, 2147], [2024, 3, 2272, 2003, 1012])
        beam_search_indices = ([0, 0, 0, 0, 0], [0, 1, 4, 3, 0], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 4, 0], [0, 1, 3, 4, 2], [0, 1, 2, 3, 4], [0, 1, 3, 2, 2], [0, 1, 2, 2, 3], [1, 0, 0, 0, 3], [0, 0, 0, 1, 3], [0, 2, 0, 3, 2], [0, 3, 1, 0, 2], [0, 1, 3, 2, 4], [0, 1, 2, 1, 0], [2, 1, 0, 3, 0], [1, 0, 2, 3, 4], [1, 0, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 4, 3], [2, 0, 1, 0, 3], [0, 0, 3, 0, 3], [2, 1, 0, 0, 1], [1, 0, 3, 2, 4], [1, 0, 4, 0, 0], [0, 1, 2, 3, 4], [0, 1, 2, 0, 0], [1, 0, 0, 0, 0], [0, 1, 0, 2, 1], [0, 0, 2, 1, 1], [0, 3, 0, 0, 1], [2, 3, 0, 3, 0], [0, 2, 2, 3, 3], [0, 3, 0, 0, 0], [0, 3, 4, 3, 2], [0, 3, 0, 0, 0], [0, 3, 2, 4, 4], [0, 1, 0, 0, 2], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 3, 2, 4], [0, 0, 0, 2, 0], [0, 0, 0, 0, 4], [0, 0, 0, 2, 0], [2, 0, 3, 1, 4], [0, 3, 2, 4, 0], [0, 3, 2, 1, 1], [0, 1, 2, 3, 2], [0, 1, 2, 0, 2], [1, 0, 2, 0, 4], [0, 1, 2, 3, 2], [0, 1, 1, 1, 1], [0, 1, 0, 4, 2], [0, 1, 3, 0, 1], [0, 1, 2, 3, 1], [1, 0, 0, 0, 2], [0, 1, 4, 2, 3], [0, 1, 2, 3, 1], [0, 1, 2, 1, 1], [0, 1, 2, 0, 0], [0, 1, 2, 3, 0], [0, 1, 2, 0, 3], [0, 1, 0, 3, 2], [1, 0, 0, 0, 0], [0, 1, 2, 4, 3], [0, 1, 3, 4, 0], [0, 1, 2, 3, 0], [1, 0, 0, 0, 2], [0, 1, 2, 4, 2], [0, 1, 2, 3, 0], [0, 1, 3, 1, 0], [1, 0, 1, 1, 0])
        BeamFinder.find_selected_indices(sequence[1:-1], beam_search_tokens[:-1], beam_search_indices[:-1])

    def test_3(self):
        """ Test that failed during training with previous code. """
        sequence = [1, 1037, 2136, 1997, 8519, 2038, 2179, 1037, 2126, 2000, 11826, 1996, 18059, 5843, 3898, 2478, 1037, 4487, 2100, 23707, 8934, 3, 1996, 11721, 24291, 13354, 2015, 2046, 1037, 3042, 1998, 23150, 2015, 1996, 9231, 4443, 2058, 18833, 3, 2011, 7176, 3495, 2000, 1996, 3042, 1005, 2015, 2373, 3120, 1010, 2009, 2064, 2058, 15637, 1996, 1036, 22505, 2951, 2044, 2184, 4740, 1005, 4292, 3, 2009, 3138, 5056, 1997, 1037, 28450, 1999, 16380, 1022, 29625, 2487, 2008, 9005, 1037, 4714, 8536, 2090, 1996, 9231, 3642, 2108, 3133, 1998, 1996, 3042, 19829, 2075, 2]
        beam_search_tokens = ([5080, 1996, 8519, 1037, 11721], [2136, 5080, 2001, 24291, 2013], [1997, 13354, 2001, 2414, 14917], [8519, 2015, 29624, 2011, 14917], [2038, 2046, 15058, 2011, 8519], [2179, 1037, 2094, 2013, 8519], [1037, 3042, 9108, 2414, 2013], [2126, 1998, 3366, 29624, 2414], [2000, 2278, 23150, 15058, 26633], [11826, 2015, 2031, 2094, 2015], [1996, 2179, 9108, 1996, 9231], [18059, 1037, 3366, 9231, 4443], [5843, 2126, 2278, 4443, 2058], [3898, 2000, 3, 2058, 18833], [3, 11826, 2478, 18833, 2009], [1037, 1996, 3, 1996, 5080], [4487, 18059, 2009, 5080, 11721], [2100, 5843, 2064, 24291, 2001], [3898, 23707, 20578, 13354, 23307], [8934, 3, 2478, 2015, 2011], [3, 1037, 2081, 1996, 5080], [4487, 1996, 2013, 5080, 2009], [2100, 3033, 5080, 11721, 13354], [23707, 4149, 24291, 20578, 2015], [8934, 3784, 13354, 2046, 8934], [3, 3, 2015, 1037, 3], [1996, 1996, 2046, 5080, 5080], [1037, 5080, 5080, 11721, 11721], [3042, 24291, 24291, 2003, 2001], [1998, 13354, 13354, 14917, 2081], [23150, 26633, 2015, 2015, 2011], [2015, 2015, 2046, 2046, 8519], [1996, 1996, 1037, 1037, 9231], [9231, 9231, 3042, 3042, 4443], [4443, 4443, 1998, 1998, 2058], [2058, 2058, 23150, 23150, 26633], [18833, 18833, 2015, 2015, 2015], [3574, 3, 3574, 1996, 3], [2009, 2009, 9231, 2009, 2011], [2064, 2064, 4443, 2064, 7176], [2058, 3495, 6033, 5047, 2058], [18833, 2000, 15637, 3495, 1996], [3574, 1996, 3, 2061, 1998], [2009, 3042, 2009, 2011, 2009], [2064, 1005, 7176, 2064, 2064], [2015, 3495, 6033, 9462, 2058], [2373, 2000, 15637, 3495, 1996], [3120, 1996, 4216, 29624, 2000], [1010, 3042, 2009, 1010, 1996], [2009, 1005, 2064, 2009, 3042], [2064, 2015, 2058, 2064, 1005], [2058, 2373, 15637, 2058, 2015], [15637, 3120, 1996, 15637, 2373], [1996, 1010, 1036, 1996, 2009], [1036, 2009, 22505, 9231, 1036], [22505, 2064, 2951, 13387, 22505], [2951, 2058, 2044, 2951, 2951], [2044, 15637, 2184, 2044, 1005], [2184, 1996, 4740, 2184, 2702], [4740, 1036, 1005, 4740, 4740], [1005, 22505, 4292, 1005, 1005], [4292, 2951, 2275, 4292, 3], [3, 2044, 3, 3, 2009], [2184, 2009, 1996, 2011, 5080], [4740, 5080, 2064, 3138, 20578], [1005, 5056, 1998, 2003, 3594], [4292, 1997, 2275, 5080, 3], [3, 1037, 2001, 3, 2009], [2009, 28450, 1996, 2011, 14917], [1999, 2064, 5080, 2011, 3138], [16380, 5056, 2003, 8519, 3594], [1022, 1997, 2013, 2019, 2809], [29625, 1037, 2414, 12997, 29625], [2487, 28450, 29624, 3482, 2487], [2008, 1999, 2029, 15058, 2109], [9005, 16380, 9005, 2094, 2011], [1037, 1022, 1037, 9108, 2070], [4714, 29625, 4714, 3366, 3042], [8536, 2487, 8536, 2278, 14350], [2090, 2008, 2090, 2029, 2090], [1996, 9005, 1996, 9231, 9005], [9231, 1037, 9231, 3642, 1037], [3642, 4714, 3642, 2108, 4714], [2108, 8536, 2108, 3133, 8536], [3133, 2090, 3133, 1998, 2090], [1998, 1996, 1998, 1996, 1996], [1996, 9231, 1996, 19829, 9231], [3042, 3642, 3042, 2075, 3642], [19829, 2108, 19829, 3, 5843], [2075, 3133, 2075, 2075, 2009], [1998, 3, 3, 3, 3])
        beam_search_indices = ([0, 0, 0, 0, 0], [3, 1, 0, 4, 2], [0, 3, 1, 4, 2], [0, 1, 3, 4, 2], [0, 1, 2, 4, 3], [0, 1, 2, 4, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 2, 1, 3, 1], [0, 2, 1, 3, 4], [0, 2, 3, 1, 1], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 0, 3, 2], [2, 1, 3, 0, 0], [0, 1, 2, 3, 3], [0, 1, 2, 4, 3], [1, 0, 0, 3, 0], [1, 0, 0, 3, 0], [0, 2, 0, 1, 1], [1, 0, 2, 0, 0], [0, 2, 1, 1, 3], [0, 1, 3, 0, 4], [0, 1, 2, 4, 3], [0, 1, 2, 3, 4], [0, 1, 2, 0, 1], [2, 0, 1, 0, 1], [0, 3, 4, 1, 1], [0, 1, 2, 4, 3], [0, 0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 0], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 2], [0, 1, 2, 3, 4], [0, 0, 1, 2, 1], [0, 2, 3, 1, 1], [0, 1, 2, 3, 4], [2, 4, 0, 0, 3], [0, 1, 4, 1, 2], [0, 1, 0, 0, 0], [0, 1, 2, 2, 3], [0, 1, 3, 2, 4], [1, 2, 0, 0, 3], [0, 1, 4, 1, 3], [0, 1, 0, 0, 3], [0, 1, 0, 2, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 1], [0, 1, 2, 0, 3], [0, 1, 2, 0, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 0], [0, 1, 2, 3, 0], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 0, 3, 2], [0, 1, 2, 3, 4], [1, 0, 0, 0, 0], [0, 2, 1, 1, 2], [0, 3, 4, 1, 1], [0, 1, 0, 2, 0], [0, 1, 3, 2, 4], [0, 1, 0, 0, 2], [1, 0, 2, 4, 0], [0, 4, 2, 3, 2], [0, 1, 3, 4, 0], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 0, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 0], [0, 1, 2, 1, 4], [0, 1, 2, 0, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 4, 3], [0, 1, 2, 0, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 0], [0, 1, 2, 4, 3], [1, 0, 2, 3, 1])
        BeamFinder.find_selected_indices(sequence[1:-1], beam_search_tokens[:-1], beam_search_indices[:-1])


if __name__ == '__main__':
    unittest.main()
